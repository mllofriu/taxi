setwd("~/work/rat_simulator/logs/ControlNoObsWithRandomPCLocation")
source('~/work/rat_simulator/logs/ControlNoObsWithRandomPCLocation/plotRuntimes.r', echo=TRUE)
runtimes
?save
?write.csv
?concat
??concat
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
setwd("~/Documents/workspace/taxi")
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
load('100trialsmlqlvsqlWith8NeighVentralDoingAction.Rdata')
rteSum <- ddply(rte, .(episode, method), summarise, meanSteps = mean(steps))
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=method)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line', 'jitter'), color=method) + ylab("Num. of Steps")
rteSm
rteSum
rteSum[rteSum$method=="mlql", 'method'] <- "Multi-Scale QL"
rteSum
rteSum <- ddply(rte, .(episode, method), summarise, meanSteps = mean(steps))
levels(rte$method)
levels(rte$method) <- c("Multi-Scale QL", "Normal QL")
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line', 'jitter'), color=method) + ylab("Num. of Steps")
rteSum <- ddply(rte, .(episode, method), summarise, meanSteps = mean(steps))
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line', 'jitter'), color=method) + ylab("Num. of Steps")
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=method)
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=method)
+ ylab("Num. of Steps") + xlab("Episode")
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=method) + ylab("Num. of Steps") + xlab("Episode")
pdf('resultPrelim090314.pdf')
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=method) + ylab("Num. of Steps") + xlab("Episode")
dev.off()
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=method) + ylab("Num. of Steps") + xlab("Episode") + theme(legend.title = element_text(size=16, face="bold"))
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=method) + ylab("Num. of Steps") + xlab("Episode") + theme(legend.title = element_text(size=24, face="bold"))
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=method) + ylab("Num. of Steps") + xlab("Episode") + theme(legend.text = element_text(size=16, face="bold"))
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=method) + ylab("Num. of Steps") + xlab("Episode") + theme(legend.text = element_text(size=16))
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=method) + ylab("Num. of Steps") + xlab("Episode") + theme(legend.text = element_text(size=16), legend.title = element_text(size=16))
theme(legend.text = element_text(size=16), legend.title = element_text(size=16))
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=method) +
ylab("Num. of Steps") + xlab("Episode") +
theme(legend.text = element_text(size=16), legend.title = element_text(size=16))
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=(Method=method)) +
ylab("Num. of Steps") + xlab("Episode") +
theme(legend.text = element_text(size=16), legend.title = element_text(size=16))
theme(legend.text = element_text(size=16), legend.title = element_text(text="Methdo",size=16))
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=method) +
ylab("Num. of Steps") + xlab("Episode") +
theme(legend.text = element_text(size=16), legend.title = element_text(text="Methdo",size=16))
theme(legend.text = element_text(size=16), legend.title = element_text(size=16)) + scale_fill_discrete(name="Experimental\nCondition")
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=method) +
ylab("Num. of Steps") + xlab("Episode") +
theme(legend.text = element_text(size=16), legend.title = element_text(size=16)) + scale_fill_discrete(name="Experimental\nCondition")
names(rteSum)
names(rteSum)[names(rteSum) == "method"] <- "Method"
names(rteSum)
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=method) +
ylab("Num. of Steps") + xlab("Episode") +
theme(legend.text = element_text(size=16), legend.title = element_text(size=16))
rteSum
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=Method) +
ylab("Num. of Steps") + xlab("Episode") +
theme(legend.text = element_text(size=16), legend.title = element_text(size=16))
source('~/Documents/workspace/taxi/graphics.R', echo=TRUE)
drawActivation()
ggplot + drawActivation()
ggplot() + drawActivation()
ggplot() +
drawGrid(world.xDim,world.yDim) +
drawWalls(world.walls) +
drawPlaces(world.places) +
drawRobot(robot) +
blank_theme()
robot = data.frame(x=3,y=3,theta=pi/2)
ggplot() +
drawGrid(world.xDim,world.yDim) +
drawWalls(world.walls) +
drawPlaces(world.places) +
drawRobot(robot) + drawActivation()
blank_theme()
ggplot() +
#         drawValue(value) +
drawGrid(world.xDim,world.yDim) +
drawWalls(world.walls) +
drawPlaces(world.places) +
drawRobot(robot) + drawActivation() +
blank_theme()
source('~/Documents/workspace/taxi/graphics.R', echo=TRUE)
source('~/Documents/workspace/taxi/graphics.R', echo=TRUE)
ggplot() +
#         drawValue(value) +
drawGrid(world.xDim,world.yDim) +
drawWalls(world.walls) +
drawPlaces(world.places) +
drawRobot(robot) + drawActivation() +
blank_theme()
ggplot() +
#         drawValue(value) +
drawGrid(world.xDim,world.yDim) +
drawWalls(world.walls) +
drawPlaces(world.places) +
drawRobot(robot) + drawActivation() +
blank_theme()
ggplot() +
#         drawValue(value) +
drawGrid(world.xDim,world.yDim) +
drawWalls(world.walls) +
drawPlaces(world.places) +
drawRobot(robot) + drawActivation() +
blank_theme()
source('~/Documents/workspace/taxi/graphics.R', echo=TRUE)
ggplot() +
#         drawValue(value) +
drawGrid(world.xDim,world.yDim) +
drawWalls(world.walls) +
drawPlaces(world.places) +
drawRobot(robot) + drawActivation() +
blank_theme()
source('~/Documents/workspace/taxi/graphics.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
setwd("~/Documents/workspace/taxi")
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
halfSquareSide <- .5
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
robotDiam <- halfSquareSide
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
eps <- 1e-10
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
load('100trialsmlqlvsqlWith8NeighVentralDoingAction.Rdata')
rte.aov <- aov(steps ~ factor(episode):method, data=rte)
tuk <- TukeyHSD(rte.aov)
?TukeyHSD
tuk
tuk <- TukeyHSD(rte.aov, which=c('30:ql-30:mlql'))
plot(tuk)
?TukeyHSD
tuk$factor(episode):method
tuk$factor(episode):method[1,1]
tuk$factor(episode):method
tuk$factor(episode)
`tuk$factor(episode):method`
tuk
head(tuk)
class(tuk)
tuk[[1]]
tuk[[2]]
tuk[1,1]
tuk[1]
tuk[1][1]
tuk[1][[1]]
tuk[1][1,]
tuk[1,[]
tuk[1,
]
tuk$"factor(episode):method"
tuk$"factor(episode):method"[1,]
tuk$"factor(episode):method"["30:ql-30:mlql"]
tuk$"factor(episode):method"["30:ql-29:ql"]
tuk$"factor(episode):method"["30:ql-29:ql",]
tuk$"factor(episode):method"["30:ql-30:mlql",]
paste(1:2, "hola")
for (i in 1:30) paste(i,":ql-",i,":mlql",sep="")
index <- for (i in 1:30) paste(i,":ql-",i,":mlql",sep="")
index
index <- foreach (i=1:30) %do% paste(i,":ql-",i,":mlql",sep="")
index
index <- foreach (i=1:30, .combine=rbind) %do% paste(i,":ql-",i,":mlql",sep="")
inde
index
index <- foreach (i=1:30) %do% paste(i,":ql-",i,":mlql",sep="")
tuk$"factor(episode):method"[index,]
"30-ql:30-mlql" %in% index
index
unlist(index)
index <- foreach (i=1:30, .combine=unlist) %do% paste(i,":ql-",i,":mlql",sep="")
index
unlist(index)
index <- foreach (i=1:30) %do% paste(i,":ql-",i,":mlql",sep="")
tuk$"factor(episode):method"[unlist(index),]
tuk$"factor(episode):method"[unlist(index),"p adj"]
ps<-tuk$"factor(episode):method"[unlist(index),"p adj"]
ps < .05
