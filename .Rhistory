setwd("~/work/rat_simulator/logs/ControlNoObsWithRandomPCLocation")
source('~/work/rat_simulator/logs/ControlNoObsWithRandomPCLocation/plotRuntimes.r', echo=TRUE)
runtimes
?save
?write.csv
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
setwd("~/Documents/workspace/taxi")
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Documents/workspace/taxi/msac.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
warnings()
source('~/Documents/workspace/taxi/ql.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/ql.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
pdf('rte.pdf')
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=Method) +
ylab("Num. of Steps") + xlab("Episode") +
theme(legend.text = element_text(size=16), legend.title = element_text(size=16))
dev.off()
names(rteSum)[names(rteSum) == "method"] <- "Method"
pdf('rte.pdf')
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=Method) +
ylab("Num. of Steps") + xlab("Episode") +
theme(legend.text = element_text(size=16), legend.title = element_text(size=16))
dev.off()
pdf('rte.pdf')
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=Method) +
ylab("Num. of Steps") + xlab("Episode") +
theme(legend.text = element_text(size=16), legend.title = element_text(size=16))
dev.off()
rte
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
rte
?clusterExport
ls()
?ls
?%do%
?"%do%"
library('foreach')
lsf
lsf.str
lsf.str()
class(lsf.str())
as.vector(lsf.str())
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
traceback()
source('~/Documents/workspace/taxi/ql.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
q[q$x==round(preRobot$x) & q$y==round(preRobot$y) & q$goal==goal & q$action==action, 'value']
val +
rlData$alpha * (reward + rlData$gamma * maxValPost - val)
q[q$x==round(preRobot$x) & q$y==round(preRobot$y) & q$goal==goal & q$action==action, 'value'] <-
val +
rlData$alpha * (reward + rlData$gamma * maxValPost - val)
rlData
source('~/Documents/workspace/taxi/ql.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/ql.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/ql.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/ql.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
rlData
stateV.ql(rlData, preRobot$x, preRobot$y, goal, action)
stateV.ql(rlData, robot$x, robot$y, goal, action)
maxValPost <- max(getActionVals(rlData, posRobot, goal, 0:3))
maxValPost <- max(getActionVals(rlData, robot, goal, 0:3))
maxValPost
val <- stateV.ql(rlData, robot$x, robot$y, goal, action)
val + rlData$alpha * (reward + rlData$gamma * maxValPost - val)
rlData$alpha
reward
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/ql.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/ql.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
postRobot
goalPos
dist(rbind(postRobot[c('x','y')], goalPos[c('x','y')]))
eps
dist(rbind(postRobot[c('x','y')], goalPos[c('x','y')])) < eps
r
rlData$goalReward
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/ql.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
foreach(i = 1:5)
forloop<-foreach(i = 1:5)
forloop
for(i in 1:5)
{}
forloop<-for(i in 1:5)
c
load('rte.Rdata')
rteSum <- ddply(rte, .(episode, method), summarise, meanSteps = mean(steps))
rte.aov <- aov(steps ~ factor(episode):method, data=rte)
tuk <- TukeyHSD(rte.aov)
save (rte, file="rte.Rdata")
names(rteSum)[names(rteSum) == "method"] <- "Method"
pdf('rte.pdf')
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=Method) +
ylab("Num. of Steps") + xlab("Episode") +
theme(legend.text = element_text(size=16), legend.title = element_text(size=16))
dev.off()
summary(rte.aov)
tuk
tuk$"factor(episode):method"[unlist(index),"p adj"]
index <- foreach (i=1:30, .combine=unlist) %do% paste(i,":ql-",i,":mlql",sep="")
tuk$"factor(episode):method"[unlist(index),"p adj"]
index <- foreach (i=1:30, .combine=unlist) %do% paste(i,":Normal QL-",i,":Multi-Scale AC-",sep="")
tuk$"factor(episode):method"[unlist(index),"p adj"]
tuk$"factor(episode):method"[unlist(index)]
tuk$"factor(episode):method"
tuk$"factor(episode):method"[40:Multi-Scale AC-40:Normal QL]
tuk$"factor(episode):method"[40:Multi-Scale AC-40:Normal QL,]
tuk$"factor(episode):method"['40:Multi-Scale AC-40:Normal QL',]
tuk$"factor(episode):method"['30:Multi-Scale AC-30:Normal QL',]
tuk$"factor(episode):method"['0:Multi-Scale AC-10:Normal QL',]
tuk$"factor(episode):method"['10:Multi-Scale AC-10:Normal QL',]
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/msac.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/msac.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/msac.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
source('~/Documents/workspace/taxi/msac.R', echo=TRUE)
source('~/Documents/workspace/taxi/simulation.R', echo=TRUE)
load('rte.Rdata')
rteSum <- ddply(rte, .(episode, method), summarise, meanSteps = mean(steps))
rte.aov <- aov(steps ~ factor(episode):method, data=rte)
tuk <- TukeyHSD(rte.aov)
save (rte, file="rte.Rdata")
names(rteSum)[names(rteSum) == "method"] <- "Method"
pdf('rte.pdf')
qplot(episode, meanSteps, data=rteSum, geom=c('point', 'line'), color=Method) +
ylab("Num. of Steps") + xlab("Episode") +
theme(legend.text = element_text(size=16), legend.title = element_text(size=16))
dev.off()
tuk$"factor(episode):method"['10:Multi-Scale AC-10:Normal QL',]
tuk$"factor(episode):method"['20:Multi-Scale AC-20:Normal QL',]
index <- foreach (i=1:30, .combine=unlist) %do% paste(i,":Multi-Scale AC-",i,":Normal QL",sep="")
index
index <- foreach (i=1:30, .combine=unlist) %do% paste(i,":Multi-Scale AC-",i,":Normal QL",sep="")
index
tuk$"factor(episode):method"['20:Multi-Scale AC-20:Normal QL',]
index <- foreach (i=1:30) %do% paste(i,":Multi-Scale AC-",i,":Normal QL",sep="")
index
tuk$"factor(episode):method"[index,]
tuk$"factor(episode):method"[unlist(index)]
unlist(index)
tuk$"factor(episode):method"[unlist(index),]
tuk$"factor(episode):method"[unlist(index),'p adj']
tuk$"factor(episode):method"['20:Multi-Scale AC-20:Normal QL',]
tuk$"factor(episode):method"['10:Multi-Scale AC-10:Normal QL',]
tuk$"factor(episode):method"[unlist(index),'p adj']
